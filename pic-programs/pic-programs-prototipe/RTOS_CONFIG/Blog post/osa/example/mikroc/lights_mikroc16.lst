;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/21/2013 12:22:03 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A0D      	GOTO       525
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00BC      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00BB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A0      	MOVWF      32
;lights_mikroc.c,288 :: 		void interrupt (void)
;lights_mikroc.c,299 :: 		if (T0IF_bit && T0IE_bit)
0x000F	0x1D0B      	BTFSS      T0IF_bit, 2
0x0010	0x2843      	GOTO       L_interrupt13
0x0011	0x1E8B      	BTFSS      T0IE_bit, 5
0x0012	0x2843      	GOTO       L_interrupt13
L__interrupt42:
;lights_mikroc.c,301 :: 		T0IF_bit = 0;
0x0013	0x110B      	BCF        T0IF_bit, 2
;lights_mikroc.c,302 :: 		cCounter++;
0x0014	0x0AA2      	INCF       interrupt_cCounter_L0, 1
;lights_mikroc.c,304 :: 		cPosition = m_cPosition;    // Position of brightness for first LED
0x0015	0x0828      	MOVF       _m_cPosition, 0
0x0016	0x00C2      	MOVWF      interrupt_cPosition_L0
;lights_mikroc.c,306 :: 		i = NUMBER_OF_LEDS;         // Loop on all LEDS
0x0017	0x3008      	MOVLW      8
0x0018	0x00C4      	MOVWF      interrupt_i_L0
;lights_mikroc.c,307 :: 		cLedsMask = 0x01;
0x0019	0x3001      	MOVLW      1
0x001A	0x00C3      	MOVWF      interrupt_cLedsMask_L0
;lights_mikroc.c,309 :: 		do
L_interrupt14:
;lights_mikroc.c,315 :: 		if (cCounter > Brightness[cPosition & TABLE_MASK])  PORTLEDS &= ~cLedsMask;
0x001B	0x3007      	MOVLW      7
0x001C	0x0542      	ANDWF      interrupt_cPosition_L0, 0
0x001D	0x00F0      	MOVWF      R0
0x001E	0x3000      	MOVLW      0
0x001F	0x00F1      	MOVWF      R0+1
0x0020	0x3049      	MOVLW      _Brightness
0x0021	0x07F0      	ADDWF      R0, 1
0x0022	0x3002      	MOVLW      hi_addr(_Brightness)
0x0023	0x1803      	BTFSC      STATUS, 0
0x0024	0x3E01      	ADDLW      1
0x0025	0x07F1      	ADDWF      R0+1, 1
0x0026	0x0870      	MOVF       R0, 0
0x0027	0x00A3      	MOVWF      ___DoICPAddr
0x0028	0x0871      	MOVF       R0+1, 0
0x0029	0x00A4      	MOVWF      ___DoICPAddr+1
0x002A	0x2206      	CALL       _____DoICP
0x002B	0x118A      	BCF        PCLATH, 3
0x002C	0x120A      	BCF        PCLATH, 4
0x002D	0x00F1      	MOVWF      R1
0x002E	0x0822      	MOVF       interrupt_cCounter_L0, 0
0x002F	0x0271      	SUBWF      R1, 0
0x0030	0x1803      	BTFSC      STATUS, 0
0x0031	0x2837      	GOTO       L_interrupt17
0x0032	0x0943      	COMF       interrupt_cLedsMask_L0, 0
0x0033	0x00F0      	MOVWF      R0
0x0034	0x0870      	MOVF       R0, 0
0x0035	0x0587      	ANDWF      PORTC, 1
0x0036	0x2839      	GOTO       L_interrupt18
L_interrupt17:
;lights_mikroc.c,316 :: 		else                                                PORTLEDS |=  cLedsMask;
0x0037	0x0843      	MOVF       interrupt_cLedsMask_L0, 0
0x0038	0x0487      	IORWF      PORTC, 1
L_interrupt18:
;lights_mikroc.c,318 :: 		cLedsMask <<= 1;            // Make mask for next LED
0x0039	0x0DC3      	RLF        interrupt_cLedsMask_L0, 1
0x003A	0x1043      	BCF        interrupt_cLedsMask_L0, 0
;lights_mikroc.c,319 :: 		cPosition += m_cDirection;  // Take next position of brightness
0x003B	0x083A      	MOVF       _m_cDirection, 0
0x003C	0x07C2      	ADDWF      interrupt_cPosition_L0, 1
;lights_mikroc.c,322 :: 		} while (--i);
0x003D	0x03C4      	DECF       interrupt_i_L0, 1
0x003E	0x0844      	MOVF       interrupt_i_L0, 0
0x003F	0x1D03      	BTFSS      STATUS, 2
0x0040	0x281B      	GOTO       L_interrupt14
;lights_mikroc.c,324 :: 		cCounter &= 0x1F;               // PWM is 5-bit, msb are zeroed
0x0041	0x301F      	MOVLW      31
0x0042	0x05A2      	ANDWF      interrupt_cCounter_L0, 1
;lights_mikroc.c,325 :: 		}
L_interrupt13:
;lights_mikroc.c,332 :: 		if (TMR2IF_bit)
0x0043	0x1C8C      	BTFSS      TMR2IF_bit, 1
0x0044	0x2847      	GOTO       L_interrupt19
;lights_mikroc.c,334 :: 		TMR2IF_bit = 0;
0x0045	0x108C      	BCF        TMR2IF_bit, 1
;lights_mikroc.c,335 :: 		OS_Timer();
0x0046	0x219F      	CALL       _OS_Timer
;lights_mikroc.c,336 :: 		}
L_interrupt19:
;lights_mikroc.c,338 :: 		}
L_end_interrupt:
L__interrupt46:
0x0047	0x0821      	MOVF       33, 0
0x0048	0x00F0      	MOVWF      R0
0x0049	0x0820      	MOVF       32, 0
0x004A	0x00F1      	MOVWF      R1
0x004B	0x083B      	MOVF       ___savePCLATH, 0
0x004C	0x008A      	MOVWF      PCLATH
0x004D	0x0E3C      	SWAPF      ___saveSTATUS, 0
0x004E	0x0083      	MOVWF      STATUS
0x004F	0x0EFF      	SWAPF      R15, 1
0x0050	0x0E7F      	SWAPF      R15, 0
0x0051	0x0009      	RETFIE
; end of _interrupt
___OS_SET_FSR_CUR_TASK:
;osa_pic16_mikroc.c,115 :: 		
;osa_pic16_mikroc.c,117 :: 		
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x1303      	BCF        STATUS, 6
0x0054	0x0826      	MOVF       __OS_CurTask, 0
0x0055	0x0084      	MOVWF      FSR
;osa_pic16_mikroc.c,118 :: 		
0x0056	0x3000      	MOVLW      hi_addr(__OS_Tasks)
0x0057	0x3800      	IORLW      0
0x0058	0x1383      	BCF        STATUS, 7
0x0059	0x1D03      	BTFSS      STATUS, 2
0x005A	0x1783      	BSF        STATUS, 7
;osa_pic16_mikroc.c,119 :: 		
L_end___OS_SET_FSR_CUR_TASK:
0x005B	0x0008      	RETURN
; end of ___OS_SET_FSR_CUR_TASK
__OS_ReturnSave:
;osa_pic16_mikroc.c,78 :: 		
;osa_pic16_mikroc.c,81 :: 		
0x005C	0x0183      	CLRF       STATUS
;osa_pic16_mikroc.c,82 :: 		
0x005D	0x00F0      	MOVWF      R0
;osa_pic16_mikroc.c,83 :: 		
0x005E	0x108A      	BCF        PCLATH, 1
;osa_pic16_mikroc.c,84 :: 		
0x005F	0x1BF0      	BTFSC      R0, 7
;osa_pic16_mikroc.c,85 :: 		
0x0060	0x148A      	BSF        PCLATH, 1
;osa_pic16_mikroc.c,87 :: 		
0x0061	0x0804      	MOVF       FSR, 0
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x00A7      	MOVWF      __OS_Temp
;osa_pic16_mikroc.c,88 :: 		
0x0065	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
0x0066	0x3002      	MOVLW      2
0x0067	0x0784      	ADDWF      FSR, 1
;osa_pic16_mikroc.c,90 :: 		
0x0068	0x0870      	MOVF       R0, 0
0x0069	0x0080      	MOVWF      INDF
;osa_pic16_mikroc.c,91 :: 		
0x006A	0x0304      	DECF       FSR, 0
0x006B	0x00F0      	MOVWF      R0
0x006C	0x0870      	MOVF       R0, 0
0x006D	0x0084      	MOVWF      FSR
;osa_pic16_mikroc.c,92 :: 		
0x006E	0x0827      	MOVF       __OS_Temp, 0
0x006F	0x0080      	MOVWF      INDF
;osa_pic16_mikroc.c,93 :: 		
0x0070	0x0304      	DECF       FSR, 0
0x0071	0x00F0      	MOVWF      R0
0x0072	0x0870      	MOVF       R0, 0
0x0073	0x0084      	MOVWF      FSR
;osa_pic16_mikroc.c,95 :: 		
0x0074	0x1580      	BSF        INDF, 3
;osa_pic16_mikroc.c,97 :: 		
0x0075	0x1C8A      	BTFSS      PCLATH, 1
0x0076	0x287E      	GOTO       L__OS_ReturnSave0
;osa_pic16_mikroc.c,99 :: 		
0x0077	0x1180      	BCF        INDF, 3
;osa_pic16_mikroc.c,103 :: 		
0x0078	0x1A00      	BTFSC      INDF, 4
0x0079	0x287B      	GOTO       L__OS_ReturnSave1
0x007A	0x1280      	BCF        INDF, 5
L__OS_ReturnSave1:
;osa_pic16_mikroc.c,104 :: 		
0x007B	0x1C0A      	BTFSS      PCLATH, 0
0x007C	0x287E      	GOTO       L__OS_ReturnSave2
0x007D	0x1680      	BSF        INDF, 5
L__OS_ReturnSave2:
;osa_pic16_mikroc.c,107 :: 		
L__OS_ReturnSave0:
;osa_pic16_mikroc.c,108 :: 		
L_end__OS_ReturnSave:
0x007E	0x0008      	RETURN
; end of __OS_ReturnSave
__OS_InitDelay:
;osa_pic16_mikroc.c,500 :: 		
;osa_pic16_mikroc.c,503 :: 		
0x007F	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
;osa_pic16_mikroc.c,504 :: 		
0x0080	0x1280      	BCF        INDF, 5
;osa_pic16_mikroc.c,505 :: 		
0x0081	0x1200      	BCF        INDF, 4
;osa_pic16_mikroc.c,507 :: 		
0x0082	0x0840      	MOVF       FARG__OS_InitDelay_Delay, 0
0x0083	0x0441      	IORWF      FARG__OS_InitDelay_Delay+1, 0
0x0084	0x1903      	BTFSC      STATUS, 2
0x0085	0x289F      	GOTO       L__OS_InitDelay11
;osa_pic16_mikroc.c,510 :: 		
0x0086	0x30FF      	MOVLW      255
0x0087	0x06C0      	XORWF      FARG__OS_InitDelay_Delay, 1
0x0088	0x30FF      	MOVLW      255
0x0089	0x06C1      	XORWF      FARG__OS_InitDelay_Delay+1, 1
;osa_pic16_mikroc.c,511 :: 		
0x008A	0x0AC0      	INCF       FARG__OS_InitDelay_Delay, 1
0x008B	0x1903      	BTFSC      STATUS, 2
0x008C	0x0AC1      	INCF       FARG__OS_InitDelay_Delay+1, 1
;osa_pic16_mikroc.c,513 :: 		
0x008D	0x3000      	MOVLW      hi_addr(__OS_Tasks)
0x008E	0x3800      	IORLW      0
0x008F	0x1383      	BCF        STATUS, 7
0x0090	0x1D03      	BTFSS      STATUS, 2
0x0091	0x1783      	BSF        STATUS, 7
;osa_pic16_mikroc.c,514 :: 		
0x0092	0x0826      	MOVF       __OS_CurTask, 0
0x0093	0x00F0      	MOVWF      R0
0x0094	0x3003      	MOVLW      3
0x0095	0x0770      	ADDWF      R0, 0
0x0096	0x0084      	MOVWF      FSR
0x0097	0x0840      	MOVF       FARG__OS_InitDelay_Delay, 0
0x0098	0x0080      	MOVWF      INDF
0x0099	0x0841      	MOVF       FARG__OS_InitDelay_Delay+1, 0
0x009A	0x0A84      	INCF       FSR, 1
0x009B	0x0080      	MOVWF      INDF
;osa_pic16_mikroc.c,515 :: 		
0x009C	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
;osa_pic16_mikroc.c,516 :: 		
0x009D	0x1600      	BSF        INDF, 4
;osa_pic16_mikroc.c,517 :: 		
0x009E	0x1580      	BSF        INDF, 3
;osa_pic16_mikroc.c,519 :: 		
L__OS_InitDelay11:
;osa_pic16_mikroc.c,520 :: 		
L_end__OS_InitDelay:
0x009F	0x0008      	RETURN
; end of __OS_InitDelay
__OS_CheckEvent:
;osa_pic16_mikroc.c,569 :: 		
;osa_pic16_mikroc.c,575 :: 		
0x00A0	0x1283      	BCF        STATUS, 5
0x00A1	0x1303      	BCF        STATUS, 6
0x00A2	0x12B9      	BCF        __OS_Flags, 5
;osa_pic16_mikroc.c,576 :: 		
0x00A3	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
;osa_pic16_mikroc.c,578 :: 		
0x00A4	0x0840      	MOVF       FARG__OS_CheckEvent_bEvent, 0
0x00A5	0x1903      	BTFSC      STATUS, 2
0x00A6	0x28AB      	GOTO       L__OS_CheckEvent12
;osa_pic16_mikroc.c,581 :: 		
0x00A7	0x1200      	BCF        INDF, 4
;osa_pic16_mikroc.c,584 :: 		
0x00A8	0x3001      	MOVLW      1
0x00A9	0x00F0      	MOVWF      R0
0x00AA	0x28B4      	GOTO       L_end__OS_CheckEvent
;osa_pic16_mikroc.c,586 :: 		
L__OS_CheckEvent12:
;osa_pic16_mikroc.c,590 :: 		
0x00AB	0x1A00      	BTFSC      INDF, 4
0x00AC	0x28B3      	GOTO       L__OS_CheckEvent15
0x00AD	0x1E80      	BTFSS      INDF, 5
0x00AE	0x28B3      	GOTO       L__OS_CheckEvent15
L___OS_CheckEvent23:
;osa_pic16_mikroc.c,592 :: 		
0x00AF	0x16B9      	BSF        __OS_Flags, 5
;osa_pic16_mikroc.c,593 :: 		
0x00B0	0x3001      	MOVLW      1
0x00B1	0x00F0      	MOVWF      R0
0x00B2	0x28B4      	GOTO       L_end__OS_CheckEvent
;osa_pic16_mikroc.c,594 :: 		
L__OS_CheckEvent15:
;osa_pic16_mikroc.c,598 :: 		
0x00B3	0x01F0      	CLRF       R0
;osa_pic16_mikroc.c,647 :: 		
L_end__OS_CheckEvent:
0x00B4	0x0008      	RETURN
; end of __OS_CheckEvent
_Task_Button:
;lights_mikroc.c,378 :: 		void Task_Button (void)
;lights_mikroc.c,380 :: 		for (;;)
L_Task_Button25:
;lights_mikroc.c,385 :: 		do
L_Task_Button28:
;lights_mikroc.c,387 :: 		OS_Cond_Wait(!pin_BUTTON);
0x00B5	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x00B6	0x008A      	MOVWF      __pclath
0x00B7	0x100A      	BCF        __pclath, 0
0x00B8	0x30BC      	MOVLW      $+4
0x00B9	0x0084      	MOVWF      __fsr
0x00BA	0x3080      	MOVLW      hi_addr($+32770)
0x00BB	0x285C      	GOTO       __OS_ReturnSave
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x1303      	BCF        STATUS, 6
0x00BE	0x1806      	BTFSC      PORTB, 0
0x00BF	0x28C2      	GOTO       L__Task_Button49
0x00C0	0x1403      	BSF        STATUS, 0
0x00C1	0x28C3      	GOTO       L__Task_Button50
L__Task_Button49:
0x00C2	0x1003      	BCF        STATUS, 0
L__Task_Button50:
0x00C3	0x3000      	MOVLW      0
0x00C4	0x1803      	BTFSC      STATUS, 0
0x00C5	0x3001      	MOVLW      1
0x00C6	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x00C7	0x0840      	MOVF       FARG__OS_CheckEvent_bEvent, 0
0x00C8	0x3A00      	XORLW      0
0x00C9	0x3001      	MOVLW      1
0x00CA	0x1903      	BTFSC      STATUS, 2
0x00CB	0x3000      	MOVLW      0
0x00CC	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x00CD	0x20A0      	CALL       __OS_CheckEvent
0x00CE	0x0870      	MOVF       R0, 0
0x00CF	0x1D03      	BTFSS      STATUS, 2
0x00D0	0x28D2      	GOTO       L_Task_Button31
0x00D1	0x0008      	RETURN
L_Task_Button31:
;lights_mikroc.c,388 :: 		OS_Delay(40 ms);                // 40 ms for debounce
0x00D2	0x3028      	MOVLW      40
0x00D3	0x00C0      	MOVWF      FARG__OS_InitDelay_Delay
0x00D4	0x3000      	MOVLW      0
0x00D5	0x00C1      	MOVWF      FARG__OS_InitDelay_Delay+1
0x00D6	0x207F      	CALL       __OS_InitDelay
0x00D7	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x00D8	0x008A      	MOVWF      __pclath
0x00D9	0x30DD      	MOVLW      $+4
0x00DA	0x0084      	MOVWF      __fsr
0x00DB	0x3000      	MOVLW      hi_addr($+2)
0x00DC	0x285C      	GOTO       __OS_ReturnSave
;lights_mikroc.c,389 :: 		} while (pin_BUTTON);
0x00DD	0x1806      	BTFSC      PORTB, 0
0x00DE	0x28B5      	GOTO       L_Task_Button28
;lights_mikroc.c,395 :: 		m_cDirection = -m_cDirection;
0x00DF	0x083A      	MOVF       _m_cDirection, 0
0x00E0	0x3C00      	SUBLW      0
0x00E1	0x00BA      	MOVWF      _m_cDirection
;lights_mikroc.c,400 :: 		do
L_Task_Button32:
;lights_mikroc.c,402 :: 		OS_Cond_Wait(pin_BUTTON);
0x00E2	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x00E3	0x008A      	MOVWF      __pclath
0x00E4	0x100A      	BCF        __pclath, 0
0x00E5	0x30E9      	MOVLW      $+4
0x00E6	0x0084      	MOVWF      __fsr
0x00E7	0x3080      	MOVLW      hi_addr($+32770)
0x00E8	0x285C      	GOTO       __OS_ReturnSave
0x00E9	0x3000      	MOVLW      0
0x00EA	0x1806      	BTFSC      PORTB, 0
0x00EB	0x3001      	MOVLW      1
0x00EC	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x00ED	0x0840      	MOVF       FARG__OS_CheckEvent_bEvent, 0
0x00EE	0x3A00      	XORLW      0
0x00EF	0x3001      	MOVLW      1
0x00F0	0x1903      	BTFSC      STATUS, 2
0x00F1	0x3000      	MOVLW      0
0x00F2	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x00F3	0x20A0      	CALL       __OS_CheckEvent
0x00F4	0x0870      	MOVF       R0, 0
0x00F5	0x1D03      	BTFSS      STATUS, 2
0x00F6	0x28F8      	GOTO       L_Task_Button35
0x00F7	0x0008      	RETURN
L_Task_Button35:
;lights_mikroc.c,403 :: 		OS_Delay(40 ms);                // 40 ms for debounce
0x00F8	0x3028      	MOVLW      40
0x00F9	0x00C0      	MOVWF      FARG__OS_InitDelay_Delay
0x00FA	0x3000      	MOVLW      0
0x00FB	0x00C1      	MOVWF      FARG__OS_InitDelay_Delay+1
0x00FC	0x207F      	CALL       __OS_InitDelay
0x00FD	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x00FE	0x008A      	MOVWF      __pclath
0x00FF	0x3003      	MOVLW      $+4
0x0100	0x0084      	MOVWF      __fsr
0x0101	0x3001      	MOVLW      hi_addr($+2)
0x0102	0x285C      	GOTO       __OS_ReturnSave
;lights_mikroc.c,404 :: 		} while (!pin_BUTTON);
0x0103	0x1C06      	BTFSS      PORTB, 0
0x0104	0x28E2      	GOTO       L_Task_Button32
;lights_mikroc.c,406 :: 		}
0x0105	0x28B5      	GOTO       L_Task_Button25
;lights_mikroc.c,407 :: 		}
L_end_Task_Button:
0x0106	0x0008      	RETURN
; end of _Task_Button
__OS_Task_Create:
;osa_pic16_mikroc.c,148 :: 		
;osa_pic16_mikroc.c,152 :: 		
0x0107	0x1283      	BCF        STATUS, 5
0x0108	0x1303      	BCF        STATUS, 6
0x0109	0x10B9      	BCF        __OS_Flags, 1
;osa_pic16_mikroc.c,155 :: 		
0x010A	0x01BD      	CLRF       FARG__OS_Task_Create_priority
;osa_pic16_mikroc.c,164 :: 		
0x010B	0x3029      	MOVLW      __OS_Tasks
0x010C	0x00F1      	MOVWF      R1
;osa_pic16_mikroc.c,165 :: 		
0x010D	0x01A7      	CLRF       __OS_Temp
;osa_pic16_mikroc.c,167 :: 		
L__OS_Task_Create3:
;osa_pic16_mikroc.c,168 :: 		
0x010E	0x3000      	MOVLW      hi_addr(__OS_Tasks)
0x010F	0x3800      	IORLW      0
0x0110	0x1383      	BCF        STATUS, 7
0x0111	0x1D03      	BTFSS      STATUS, 2
0x0112	0x1783      	BSF        STATUS, 7
;osa_pic16_mikroc.c,170 :: 		
0x0113	0x0871      	MOVF       R1, 0
0x0114	0x0084      	MOVWF      FSR
0x0115	0x0800      	MOVF       INDF, 0
0x0116	0x00F0      	MOVWF      R0
0x0117	0x1B70      	BTFSC      R0, 6
0x0118	0x292F      	GOTO       L__OS_Task_Create6
;osa_pic16_mikroc.c,172 :: 		
0x0119	0x173D      	BSF        FARG__OS_Task_Create_priority, 6
;osa_pic16_mikroc.c,173 :: 		
0x011A	0x15BD      	BSF        FARG__OS_Task_Create_priority, 3
;osa_pic16_mikroc.c,175 :: 		
0x011B	0x0A71      	INCF       R1, 0
0x011C	0x0084      	MOVWF      FSR
0x011D	0x083E      	MOVF       FARG__OS_Task_Create_TaskAddr, 0
0x011E	0x0080      	MOVWF      INDF
0x011F	0x083F      	MOVF       FARG__OS_Task_Create_TaskAddr+1, 0
0x0120	0x0A84      	INCF       FSR, 1
0x0121	0x0080      	MOVWF      INDF
;osa_pic16_mikroc.c,178 :: 		
0x0122	0x3003      	MOVLW      3
0x0123	0x0771      	ADDWF      R1, 0
0x0124	0x0084      	MOVWF      FSR
0x0125	0x0180      	CLRF       INDF
0x0126	0x0A84      	INCF       FSR, 1
0x0127	0x0180      	CLRF       INDF
;osa_pic16_mikroc.c,185 :: 		
0x0128	0x0871      	MOVF       R1, 0
0x0129	0x0084      	MOVWF      FSR
0x012A	0x083D      	MOVF       FARG__OS_Task_Create_priority, 0
0x012B	0x0080      	MOVWF      INDF
;osa_pic16_mikroc.c,191 :: 		
0x012C	0x10B9      	BCF        __OS_Flags, 1
;osa_pic16_mikroc.c,192 :: 		
0x012D	0x1383      	BCF        IRP_bit, 7
;osa_pic16_mikroc.c,193 :: 		
0x012E	0x2938      	GOTO       L_end__OS_Task_Create
;osa_pic16_mikroc.c,194 :: 		
L__OS_Task_Create6:
;osa_pic16_mikroc.c,196 :: 		
0x012F	0x3005      	MOVLW      5
0x0130	0x07F1      	ADDWF      R1, 1
;osa_pic16_mikroc.c,198 :: 		
0x0131	0x0AA7      	INCF       __OS_Temp, 1
0x0132	0x3003      	MOVLW      3
0x0133	0x0227      	SUBWF      __OS_Temp, 0
0x0134	0x1C03      	BTFSS      STATUS, 0
0x0135	0x290E      	GOTO       L__OS_Task_Create3
;osa_pic16_mikroc.c,201 :: 		
0x0136	0x14B9      	BSF        __OS_Flags, 1
;osa_pic16_mikroc.c,203 :: 		
0x0137	0x1383      	BCF        IRP_bit, 7
;osa_pic16_mikroc.c,204 :: 		
;osa_pic16_mikroc.c,205 :: 		
L_end__OS_Task_Create:
0x0138	0x0008      	RETURN
; end of __OS_Task_Create
__OS_JumpToTask:
;osa_pic16_mikroc.c,47 :: 		
;osa_pic16_mikroc.c,49 :: 		
0x0139	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
0x013A	0x3002      	MOVLW      2
0x013B	0x0784      	ADDWF      FSR, 1
;osa_pic16_mikroc.c,50 :: 		
0x013C	0x301F      	MOVLW      31
0x013D	0x0500      	ANDWF      INDF, 0
0x013E	0x008A      	MOVWF      PCLATH
;osa_pic16_mikroc.c,51 :: 		
0x013F	0x0304      	DECF       FSR, 0
0x0140	0x00F0      	MOVWF      R0
0x0141	0x0870      	MOVF       R0, 0
0x0142	0x0084      	MOVWF      FSR
;osa_pic16_mikroc.c,53 :: 		
0x0143	0x0800      	MOVF       INDF, 0
;osa_pic16_mikroc.c,54 :: 		
0x0144	0x0384      	DECF       FSR, 1
;osa_pic16_mikroc.c,55 :: 		
0x0145	0x0082      	MOVWF      PCL
;osa_pic16_mikroc.c,57 :: 		
L_end__OS_JumpToTask:
0x0146	0x0008      	RETURN
; end of __OS_JumpToTask
_Init:
;lights_mikroc.c,216 :: 		void Init (void)
;lights_mikroc.c,223 :: 		PORTA = PORTA_CONST;
0x0147	0x1283      	BCF        STATUS, 5
0x0148	0x1303      	BCF        STATUS, 6
0x0149	0x0185      	CLRF       PORTA
;lights_mikroc.c,224 :: 		PORTB = PORTB_CONST;
0x014A	0x0186      	CLRF       PORTB
;lights_mikroc.c,226 :: 		TRISA = TRISA_CONST;
0x014B	0x3001      	MOVLW      1
0x014C	0x1683      	BSF        STATUS, 5
0x014D	0x0085      	MOVWF      TRISA
;lights_mikroc.c,227 :: 		TRISB = TRISB_CONST;
0x014E	0x3001      	MOVLW      1
0x014F	0x0086      	MOVWF      TRISB
;lights_mikroc.c,229 :: 		NOT_RBPU_bit = 0;
0x0150	0x1381      	BCF        NOT_RBPU_bit, 7
;lights_mikroc.c,231 :: 		PORTC = PORTC_CONST;
0x0151	0x1283      	BCF        STATUS, 5
0x0152	0x0187      	CLRF       PORTC
;lights_mikroc.c,232 :: 		TRISC = TRISC_CONST;
0x0153	0x1683      	BSF        STATUS, 5
0x0154	0x0187      	CLRF       TRISC
;lights_mikroc.c,236 :: 		PORTD = PORTD_CONST;
0x0155	0x1283      	BCF        STATUS, 5
0x0156	0x0188      	CLRF       PORTD
;lights_mikroc.c,237 :: 		TRISD = TRISD_CONST;
0x0157	0x1683      	BSF        STATUS, 5
0x0158	0x0188      	CLRF       TRISD
;lights_mikroc.c,241 :: 		PORTE = PORTE_CONST;
0x0159	0x1283      	BCF        STATUS, 5
0x015A	0x0189      	CLRF       PORTE
;lights_mikroc.c,242 :: 		TRISE = TRISE_CONST;
0x015B	0x1683      	BSF        STATUS, 5
0x015C	0x0189      	CLRF       TRISE
;lights_mikroc.c,250 :: 		ADCON0 = 0xC1;                  // Channel 0
0x015D	0x30C1      	MOVLW      193
0x015E	0x1283      	BCF        STATUS, 5
0x015F	0x009F      	MOVWF      ADCON0
;lights_mikroc.c,254 :: 		ADCON1 = 0x0E;                  // Use only one analog input AN0 (RA0)
0x0160	0x300E      	MOVLW      14
0x0161	0x1683      	BSF        STATUS, 5
0x0162	0x009F      	MOVWF      ADCON1
;lights_mikroc.c,266 :: 		OPTION_REG = 0x00 | T0CON_CONST;
0x0163	0x3041      	MOVLW      65
0x0164	0x0081      	MOVWF      OPTION_REG
;lights_mikroc.c,269 :: 		T2CON = T2CON_CONST;
0x0165	0x3025      	MOVLW      37
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x0092      	MOVWF      T2CON
;lights_mikroc.c,270 :: 		PR2 = 250-1;
0x0168	0x30F9      	MOVLW      249
0x0169	0x1683      	BSF        STATUS, 5
0x016A	0x0092      	MOVWF      PR2
;lights_mikroc.c,276 :: 		INTCON = 0;
0x016B	0x018B      	CLRF       INTCON
;lights_mikroc.c,277 :: 		T0IE_bit = 1;
0x016C	0x168B      	BSF        T0IE_bit, 5
;lights_mikroc.c,278 :: 		PEIE_bit = 1;
0x016D	0x170B      	BSF        PEIE_bit, 6
;lights_mikroc.c,279 :: 		TMR2IE_bit = 1;
0x016E	0x148C      	BSF        TMR2IE_bit, 1
;lights_mikroc.c,280 :: 		}
L_end_Init:
0x016F	0x0008      	RETURN
; end of _Init
_Task_SetSpeed:
;lights_mikroc.c,419 :: 		void Task_SetSpeed (void)
;lights_mikroc.c,421 :: 		for (;;)
L_Task_SetSpeed36:
;lights_mikroc.c,423 :: 		ADCON0 &= ~0x38;            // Set AD channel 0
0x0170	0x30C7      	MOVLW      199
0x0171	0x1283      	BCF        STATUS, 5
0x0172	0x1303      	BCF        STATUS, 6
0x0173	0x059F      	ANDWF      ADCON0, 1
;lights_mikroc.c,425 :: 		GO_bit = 1;                 // Run conversion
0x0174	0x151F      	BSF        GO_bit, 2
;lights_mikroc.c,426 :: 		OS_Cond_Wait(!NOT_DONE_bit);// Wait for conversion complete
0x0175	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x0176	0x008A      	MOVWF      __pclath
0x0177	0x100A      	BCF        __pclath, 0
0x0178	0x307C      	MOVLW      $+4
0x0179	0x0084      	MOVWF      __fsr
0x017A	0x3081      	MOVLW      hi_addr($+32770)
0x017B	0x285C      	GOTO       __OS_ReturnSave
0x017C	0x191F      	BTFSC      NOT_DONE_bit, 2
0x017D	0x2980      	GOTO       L__Task_SetSpeed52
0x017E	0x1403      	BSF        STATUS, 0
0x017F	0x2981      	GOTO       L__Task_SetSpeed53
L__Task_SetSpeed52:
0x0180	0x1003      	BCF        STATUS, 0
L__Task_SetSpeed53:
0x0181	0x3000      	MOVLW      0
0x0182	0x1803      	BTFSC      STATUS, 0
0x0183	0x3001      	MOVLW      1
0x0184	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x0185	0x0840      	MOVF       FARG__OS_CheckEvent_bEvent, 0
0x0186	0x3A00      	XORLW      0
0x0187	0x3001      	MOVLW      1
0x0188	0x1903      	BTFSC      STATUS, 2
0x0189	0x3000      	MOVLW      0
0x018A	0x00C0      	MOVWF      FARG__OS_CheckEvent_bEvent
0x018B	0x20A0      	CALL       __OS_CheckEvent
0x018C	0x0870      	MOVF       R0, 0
0x018D	0x1D03      	BTFSS      STATUS, 2
0x018E	0x2990      	GOTO       L_Task_SetSpeed39
0x018F	0x0008      	RETURN
L_Task_SetSpeed39:
;lights_mikroc.c,428 :: 		m_cSpeed = ADRESH;          // Set new speed value
0x0190	0x081E      	MOVF       ADRESH, 0
0x0191	0x00B8      	MOVWF      _m_cSpeed
;lights_mikroc.c,430 :: 		OS_Delay(100 ms);
0x0192	0x3064      	MOVLW      100
0x0193	0x00C0      	MOVWF      FARG__OS_InitDelay_Delay
0x0194	0x3000      	MOVLW      0
0x0195	0x00C1      	MOVWF      FARG__OS_InitDelay_Delay+1
0x0196	0x207F      	CALL       __OS_InitDelay
0x0197	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x0198	0x008A      	MOVWF      __pclath
0x0199	0x309D      	MOVLW      $+4
0x019A	0x0084      	MOVWF      __fsr
0x019B	0x3001      	MOVLW      hi_addr($+2)
0x019C	0x285C      	GOTO       __OS_ReturnSave
;lights_mikroc.c,431 :: 		}
0x019D	0x2970      	GOTO       L_Task_SetSpeed36
;lights_mikroc.c,432 :: 		}
L_end_Task_SetSpeed:
0x019E	0x0008      	RETURN
; end of _Task_SetSpeed
_OS_Timer:
;osa_system.c,568 :: 		
;osa_system.c,570 :: 		
0x019F	0x1283      	BCF        STATUS, 5
0x01A0	0x1303      	BCF        STATUS, 6
0x01A1	0x1E29      	BTFSS      __OS_Tasks, 4
0x01A2	0x29B4      	GOTO       L_OS_Timer17
0x01A3	0x082C      	MOVF       __OS_Tasks+3, 0
0x01A4	0x3E01      	ADDLW      1
0x01A5	0x00F0      	MOVWF      R0
0x01A6	0x3000      	MOVLW      0
0x01A7	0x1803      	BTFSC      STATUS, 0
0x01A8	0x3E01      	ADDLW      1
0x01A9	0x072D      	ADDWF      __OS_Tasks+4, 0
0x01AA	0x00F1      	MOVWF      R0+1
0x01AB	0x0870      	MOVF       R0, 0
0x01AC	0x00AC      	MOVWF      __OS_Tasks+3
0x01AD	0x0871      	MOVF       R0+1, 0
0x01AE	0x00AD      	MOVWF      __OS_Tasks+4
0x01AF	0x082C      	MOVF       __OS_Tasks+3, 0
0x01B0	0x042D      	IORWF      __OS_Tasks+4, 0
0x01B1	0x1D03      	BTFSS      STATUS, 2
0x01B2	0x29B4      	GOTO       L_OS_Timer18
0x01B3	0x1229      	BCF        __OS_Tasks, 4
L_OS_Timer18:
L_OS_Timer17:
0x01B4	0x1E2E      	BTFSS      __OS_Tasks+5, 4
0x01B5	0x29C7      	GOTO       L_OS_Timer19
0x01B6	0x0831      	MOVF       __OS_Tasks+8, 0
0x01B7	0x3E01      	ADDLW      1
0x01B8	0x00F0      	MOVWF      R0
0x01B9	0x3000      	MOVLW      0
0x01BA	0x1803      	BTFSC      STATUS, 0
0x01BB	0x3E01      	ADDLW      1
0x01BC	0x0732      	ADDWF      __OS_Tasks+9, 0
0x01BD	0x00F1      	MOVWF      R0+1
0x01BE	0x0870      	MOVF       R0, 0
0x01BF	0x00B1      	MOVWF      __OS_Tasks+8
0x01C0	0x0871      	MOVF       R0+1, 0
0x01C1	0x00B2      	MOVWF      __OS_Tasks+9
0x01C2	0x0831      	MOVF       __OS_Tasks+8, 0
0x01C3	0x0432      	IORWF      __OS_Tasks+9, 0
0x01C4	0x1D03      	BTFSS      STATUS, 2
0x01C5	0x29C7      	GOTO       L_OS_Timer20
0x01C6	0x122E      	BCF        __OS_Tasks+5, 4
L_OS_Timer20:
L_OS_Timer19:
0x01C7	0x1E33      	BTFSS      __OS_Tasks+10, 4
0x01C8	0x29DA      	GOTO       L_OS_Timer21
0x01C9	0x0836      	MOVF       __OS_Tasks+13, 0
0x01CA	0x3E01      	ADDLW      1
0x01CB	0x00F0      	MOVWF      R0
0x01CC	0x3000      	MOVLW      0
0x01CD	0x1803      	BTFSC      STATUS, 0
0x01CE	0x3E01      	ADDLW      1
0x01CF	0x0737      	ADDWF      __OS_Tasks+14, 0
0x01D0	0x00F1      	MOVWF      R0+1
0x01D1	0x0870      	MOVF       R0, 0
0x01D2	0x00B6      	MOVWF      __OS_Tasks+13
0x01D3	0x0871      	MOVF       R0+1, 0
0x01D4	0x00B7      	MOVWF      __OS_Tasks+14
0x01D5	0x0836      	MOVF       __OS_Tasks+13, 0
0x01D6	0x0437      	IORWF      __OS_Tasks+14, 0
0x01D7	0x1D03      	BTFSS      STATUS, 2
0x01D8	0x29DA      	GOTO       L_OS_Timer22
0x01D9	0x1233      	BCF        __OS_Tasks+10, 4
L_OS_Timer22:
L_OS_Timer21:
;osa_system.c,571 :: 		
L_end_OS_Timer:
0x01DA	0x0008      	RETURN
; end of _OS_Timer
_OS_Init:
;osa_system.c,67 :: 		
;osa_system.c,72 :: 		
0x01DB	0x1283      	BCF        STATUS, 5
0x01DC	0x1303      	BCF        STATUS, 6
0x01DD	0x01B9      	CLRF       __OS_Flags
;osa_system.c,75 :: 		
0x01DE	0x1F8A      	BTFSS      PCLATH, 7
0x01DF	0x29E1      	GOTO       L_OS_Init16
0x01E0	0x205C      	CALL       __OS_ReturnSave
L_OS_Init16:
;osa_system.c,323 :: 		
0x01E1	0x3029      	MOVLW      __OS_Tasks
0x01E2	0x00F0      	MOVWF      R0
0x01E3	0x300A      	MOVLW      10
0x01E4	0x0770      	ADDWF      R0, 0
0x01E5	0x00A6      	MOVWF      __OS_CurTask
;osa_system.c,326 :: 		
0x01E6	0x1329      	BCF        __OS_Tasks, 6
;osa_system.c,329 :: 		
0x01E7	0x132E      	BCF        __OS_Tasks+5, 6
;osa_system.c,333 :: 		
0x01E8	0x1333      	BCF        __OS_Tasks+10, 6
;osa_system.c,394 :: 		
L_end_OS_Init:
0x01E9	0x0008      	RETURN
; end of _OS_Init
_Task_Rolling:
;lights_mikroc.c,353 :: 		void Task_Rolling (void)
;lights_mikroc.c,357 :: 		for (;;)
L_Task_Rolling20:
;lights_mikroc.c,359 :: 		cDelay = 0;
0x01EA	0x1283      	BCF        STATUS, 5
0x01EB	0x1303      	BCF        STATUS, 6
0x01EC	0x01A5      	CLRF       Task_Rolling_cDelay_L0
;lights_mikroc.c,360 :: 		while (cDelay++ <= m_cSpeed) OS_Delay(1);   // Wait delay according current
L_Task_Rolling23:
0x01ED	0x0825      	MOVF       Task_Rolling_cDelay_L0, 0
0x01EE	0x00F1      	MOVWF      R1
0x01EF	0x0AA5      	INCF       Task_Rolling_cDelay_L0, 1
0x01F0	0x0871      	MOVF       R1, 0
0x01F1	0x0238      	SUBWF      _m_cSpeed, 0
0x01F2	0x1C03      	BTFSS      STATUS, 0
0x01F3	0x2A00      	GOTO       L_Task_Rolling24
0x01F4	0x3001      	MOVLW      1
0x01F5	0x00C0      	MOVWF      FARG__OS_InitDelay_Delay
0x01F6	0x3000      	MOVLW      0
0x01F7	0x00C1      	MOVWF      FARG__OS_InitDelay_Delay+1
0x01F8	0x207F      	CALL       __OS_InitDelay
0x01F9	0x3000      	MOVLW      hi_addr(__OS_ReturnSave)
0x01FA	0x008A      	MOVWF      __pclath
0x01FB	0x30FF      	MOVLW      $+4
0x01FC	0x0084      	MOVWF      __fsr
0x01FD	0x3001      	MOVLW      hi_addr($+2)
0x01FE	0x285C      	GOTO       __OS_ReturnSave
0x01FF	0x29ED      	GOTO       L_Task_Rolling23
L_Task_Rolling24:
;lights_mikroc.c,362 :: 		m_cPosition ++;                             // Change brightness position
0x0200	0x0A28      	INCF       _m_cPosition, 0
0x0201	0x00F0      	MOVWF      R0
0x0202	0x0870      	MOVF       R0, 0
0x0203	0x00A8      	MOVWF      _m_cPosition
;lights_mikroc.c,364 :: 		}
0x0204	0x29EA      	GOTO       L_Task_Rolling20
;lights_mikroc.c,365 :: 		}
L_end_Task_Rolling:
0x0205	0x0008      	RETURN
; end of _Task_Rolling
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0206	0x1283      	BCF        STATUS, 5
0x0207	0x1303      	BCF        STATUS, 6
0x0208	0x0824      	MOVF       ___DoICPAddr+1, 0
0x0209	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x020A	0x0823      	MOVF       ___DoICPAddr, 0
0x020B	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x020C	0x0008      	RETURN
; end of _____DoICP
_main:
;lights_mikroc.c,175 :: 		void main (void)
;lights_mikroc.c,177 :: 		Init();                             // Init periphery
0x020D	0x2147      	CALL       _Init
;lights_mikroc.c,179 :: 		OS_Init();                          // Init OS
0x020E	0x21DB      	CALL       _OS_Init
;lights_mikroc.c,183 :: 		OS_Task_Create(0, Task_Rolling);    // Create tasks.
0x020F	0x01BD      	CLRF       FARG__OS_Task_Create_priority
0x0210	0x30EA      	MOVLW      _Task_Rolling
0x0211	0x00BE      	MOVWF      FARG__OS_Task_Create_TaskAddr
0x0212	0x3001      	MOVLW      hi_addr(_Task_Rolling)
0x0213	0x00BF      	MOVWF      FARG__OS_Task_Create_TaskAddr+1
0x0214	0x2107      	CALL       __OS_Task_Create
;lights_mikroc.c,184 :: 		OS_Task_Create(0, Task_SetSpeed);   //
0x0215	0x01BD      	CLRF       FARG__OS_Task_Create_priority
0x0216	0x3070      	MOVLW      _Task_SetSpeed
0x0217	0x00BE      	MOVWF      FARG__OS_Task_Create_TaskAddr
0x0218	0x3001      	MOVLW      hi_addr(_Task_SetSpeed)
0x0219	0x00BF      	MOVWF      FARG__OS_Task_Create_TaskAddr+1
0x021A	0x2107      	CALL       __OS_Task_Create
;lights_mikroc.c,185 :: 		OS_Task_Create(0, Task_Button);     //
0x021B	0x01BD      	CLRF       FARG__OS_Task_Create_priority
0x021C	0x30B5      	MOVLW      _Task_Button
0x021D	0x00BE      	MOVWF      FARG__OS_Task_Create_TaskAddr
0x021E	0x3000      	MOVLW      hi_addr(_Task_Button)
0x021F	0x00BF      	MOVWF      FARG__OS_Task_Create_TaskAddr+1
0x0220	0x2107      	CALL       __OS_Task_Create
;lights_mikroc.c,188 :: 		m_cPosition  = 0;                   // rotation phase
0x0221	0x01A8      	CLRF       _m_cPosition
;lights_mikroc.c,189 :: 		m_cDirection = 1;                   // dircetion
0x0222	0x3001      	MOVLW      1
0x0223	0x00BA      	MOVWF      _m_cDirection
;lights_mikroc.c,191 :: 		OS_EI();                            // Enable interrupts
0x0224	0x178B      	BSF        GIE_bit, 7
;lights_mikroc.c,193 :: 		OS_Run();                           // Running scheduler void hello() iv 0x0018 ics ICS_AUTO {}
L_main0:
0x0225	0x01A7      	CLRF       __OS_Temp
0x0226	0x3029      	MOVLW      __OS_Tasks
0x0227	0x00F0      	MOVWF      R0
0x0228	0x300A      	MOVLW      10
0x0229	0x0770      	ADDWF      R0, 0
0x022A	0x00F1      	MOVWF      R1
0x022B	0x0871      	MOVF       R1, 0
0x022C	0x0226      	SUBWF      __OS_CurTask, 0
0x022D	0x1C03      	BTFSS      STATUS, 0
0x022E	0x2A32      	GOTO       L_main3
0x022F	0x3029      	MOVLW      __OS_Tasks
0x0230	0x00A6      	MOVWF      __OS_CurTask
0x0231	0x2A37      	GOTO       L_main4
L_main3:
0x0232	0x3005      	MOVLW      5
0x0233	0x0726      	ADDWF      __OS_CurTask, 0
0x0234	0x00F0      	MOVWF      R0
0x0235	0x0870      	MOVF       R0, 0
0x0236	0x00A6      	MOVWF      __OS_CurTask
L_main4:
0x0237	0x2052      	CALL       ___OS_SET_FSR_CUR_TASK
0x0238	0x1F00      	BTFSS      __indf, 6
0x0239	0x2A3D      	GOTO       L__main41
0x023A	0x1B80      	BTFSC      __indf, 7
0x023B	0x2A3D      	GOTO       L__main41
0x023C	0x2A3E      	GOTO       L_main7
L__main41:
0x023D	0x2A47      	GOTO       ___main__OS_SCHED_CONTINUE
L_main7:
0x023E	0x1E00      	BTFSS      __indf, 4
0x023F	0x2A43      	GOTO       L_main10
0x0240	0x1A80      	BTFSC      __indf, 5
0x0241	0x2A43      	GOTO       L_main10
L__main40:
0x0242	0x2A47      	GOTO       ___main__OS_SCHED_CONTINUE
L_main10:
0x0243	0x2139      	CALL       __OS_JumpToTask
0x0244	0x0183      	CLRF       __status
0x0245	0x3002      	MOVLW      hi_addr($+0)
0x0246	0x008A      	MOVWF      __pclath
___main__OS_SCHED_CONTINUE:
0x0247	0x2A25      	GOTO       L_main0
;lights_mikroc.c,195 :: 		}
L_end_main:
0x0248	0x2A48      	GOTO       $+0
; end of _main
;lights_mikroc.c,123 :: _Brightness
0x0249	0x341F ;_Brightness+0
0x024A	0x3414 ;_Brightness+1
0x024B	0x340B ;_Brightness+2
0x024C	0x3407 ;_Brightness+3
0x024D	0x3404 ;_Brightness+4
0x024E	0x3402 ;_Brightness+5
0x024F	0x3401 ;_Brightness+6
0x0250	0x3400 ;_Brightness+7
; end of _Brightness
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [78]    _interrupt
0x0052      [10]    ___OS_SET_FSR_CUR_TASK
0x005C      [35]    __OS_ReturnSave
0x007F      [33]    __OS_InitDelay
0x00A0      [21]    __OS_CheckEvent
0x00B5      [82]    _Task_Button
0x0107      [50]    __OS_Task_Create
0x0139      [14]    __OS_JumpToTask
0x0147      [41]    _Init
0x0170      [47]    _Task_SetSpeed
0x019F      [60]    _OS_Timer
0x01DB      [15]    _OS_Init
0x01EA      [28]    _Task_Rolling
0x0206       [7]    _____DoICP
0x020D      [60]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __indf
0x0000       [1]    INDF
0x0002       [1]    __pcl
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0003       [0]    IRP_bit
0x0003       [1]    __status
0x0004       [1]    __fsr
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    __pclath
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IE_bit
0x000B       [0]    T0IF_bit
0x000C       [0]    TMR2IF_bit
0x0012       [1]    T2CON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x001F       [0]    GO_bit
0x001F       [0]    NOT_DONE_bit
0x0022       [1]    interrupt_cCounter_L0
0x0023       [2]    ___DoICPAddr
0x0025       [1]    Task_Rolling_cDelay_L0
0x0026       [1]    __OS_CurTask
0x0027       [1]    __OS_Temp
0x0028       [1]    _m_cPosition
0x0029      [15]    __OS_Tasks
0x0038       [1]    _m_cSpeed
0x0039       [1]    __OS_Flags
0x003A       [1]    _m_cDirection
0x003B       [1]    ___savePCLATH
0x003C       [1]    ___saveSTATUS
0x003D       [1]    FARG__OS_Task_Create_priority
0x003E       [2]    FARG__OS_Task_Create_TaskAddr
0x0040       [1]    FARG__OS_CheckEvent_bEvent
0x0040       [2]    FARG__OS_InitDelay_Delay
0x0042       [1]    interrupt_cPosition_L0
0x0043       [1]    interrupt_cLedsMask_L0
0x0044       [1]    interrupt_i_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x008C       [0]    TMR2IE_bit
0x0092       [1]    PR2
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0249       [8]    _Brightness
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  ___main__OS_SCHED_CONTINUE
  L_main8
  L_main9
  L_main10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_Task_Rolling20
  L_Task_Rolling21
  L_Task_Rolling22
  L_Task_Rolling23
  L_Task_Rolling24
  L_Task_Button25
  L_Task_Button26
  L_Task_Button27
  L_Task_Button28
  L_Task_Button29
  L_Task_Button30
  L_Task_Button31
  L_Task_Button32
  L_Task_Button33
  L_Task_Button34
  L_Task_Button35
  L_Task_SetSpeed36
  L_Task_SetSpeed37
  L_Task_SetSpeed38
  L_Task_SetSpeed39
  L__main40
  L__main41
  L__interrupt42
  L_end_main
  _main
  L_end_Init
  _Init
  L_end_interrupt
  _interrupt
  L__interrupt46
  L_end_Task_Rolling
  _Task_Rolling
  L_end_Task_Button
  _Task_Button
  L__Task_Button49
  L__Task_Button50
  L_end_Task_SetSpeed
  _Task_SetSpeed
  L__Task_SetSpeed52
  L__Task_SetSpeed53
  L__OS_ReturnSave0
  L__OS_ReturnSave1
  L__OS_ReturnSave2
  L__OS_Task_Create3
  L__OS_Task_Create4
  L__OS_Task_Create5
  L__OS_Task_Create6
  L__OS_Task_IsPaused7
  L__OS_Task_IsPaused8
  L__OS_Task_IsEnable9
  L__OS_Task_IsEnable10
  L__OS_InitDelay11
  L__OS_CheckEvent12
  L__OS_CheckEvent13
  L__OS_CheckEvent14
  L__OS_CheckEvent15
  L_OS_Init16
  L_OS_Timer17
  L_OS_Timer18
  L_OS_Timer19
  L_OS_Timer20
  L_OS_Timer21
  L_OS_Timer22
  L___OS_CheckEvent23
  L_end__OS_JumpToTask
  __OS_JumpToTask
  L_end__OS_ReturnSave
  __OS_ReturnSave
  L_end___OS_SET_FSR_CUR_TASK
  ___OS_SET_FSR_CUR_TASK
  L_end__OS_Task_Create
  __OS_Task_Create
  L_end__OS_Task_GetPriority
  __OS_Task_GetPriority
  L_end__OS_Task_IsPaused
  __OS_Task_IsPaused
  L_end__OS_Task_IsEnable
  __OS_Task_IsEnable
  L_end_OS_DI
  _OS_DI
  L_end__OS_InitDelay
  __OS_InitDelay
  L_end__OS_CheckEvent
  __OS_CheckEvent
  L_end_OS_Init
  _OS_Init
  L_end_OS_Timer
  _OS_Timer
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  ___main__OS_SCHED_CONTINUE
  L_main8
  L_main9
  L_main10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_Task_Rolling20
  L_Task_Rolling21
  L_Task_Rolling22
  L_Task_Rolling23
  L_Task_Rolling24
  L_Task_Button25
  L_Task_Button26
  L_Task_Button27
  L_Task_Button28
  L_Task_Button29
  L_Task_Button30
  L_Task_Button31
  L_Task_Button32
  L_Task_Button33
  L_Task_Button34
  L_Task_Button35
  L_Task_SetSpeed36
  L_Task_SetSpeed37
  L_Task_SetSpeed38
  L_Task_SetSpeed39
  L__main40
  L__main41
  L__interrupt42
  L_end_main
  _main
  L_end_Init
  _Init
  L_end_interrupt
  _interrupt
  L__interrupt46
  L_end_Task_Rolling
  _Task_Rolling
  L_end_Task_Button
  _Task_Button
  L__Task_Button49
  L__Task_Button50
  L_end_Task_SetSpeed
  _Task_SetSpeed
  L__Task_SetSpeed52
  L__Task_SetSpeed53
  L__OS_ReturnSave0
  L__OS_ReturnSave1
  L__OS_ReturnSave2
  L__OS_Task_Create3
  L__OS_Task_Create4
  L__OS_Task_Create5
  L__OS_Task_Create6
  L__OS_Task_IsPaused7
  L__OS_Task_IsPaused8
  L__OS_Task_IsEnable9
  L__OS_Task_IsEnable10
  L__OS_InitDelay11
  L__OS_CheckEvent12
  L__OS_CheckEvent13
  L__OS_CheckEvent14
  L__OS_CheckEvent15
  L_OS_Init16
  L_OS_Timer17
  L_OS_Timer18
  L_OS_Timer19
  L_OS_Timer20
  L_OS_Timer21
  L_OS_Timer22
  L___OS_CheckEvent23
  L_end__OS_JumpToTask
  __OS_JumpToTask
  L_end__OS_ReturnSave
  __OS_ReturnSave
  L_end___OS_SET_FSR_CUR_TASK
  ___OS_SET_FSR_CUR_TASK
  L_end__OS_Task_Create
  __OS_Task_Create
  L_end__OS_Task_GetPriority
  __OS_Task_GetPriority
  L_end__OS_Task_IsPaused
  __OS_Task_IsPaused
  L_end__OS_Task_IsEnable
  __OS_Task_IsEnable
  L_end_OS_DI
  _OS_DI
  L_end__OS_InitDelay
  __OS_InitDelay
  L_end__OS_CheckEvent
  __OS_CheckEvent
  L_end_OS_Init
  _OS_Init
  L_end_OS_Timer
  _OS_Timer
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
